{"version":3,"sources":["Card.js","CardList.js","Score.js","BlackjackGame.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","cardId","alt","CardList","cards","map","getCardScore","card","val","includes","Score","score","total","getTotalScore","choice","values","Math","floor","random","length","getCard","suits","BlackjackGame","pairOfCards","numCards","cardsArr","randomCard","push","getCards","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAaeA,MAVf,SAAcC,GACZ,OACE,qBACEC,UAAU,OACVC,IAAG,gDAA2CF,EAAMG,OAAjD,QACHC,IAAG,UAAKJ,EAAMG,OAAX,oBCEME,MAPf,SAAkBL,GAChB,IAAMM,EAAQN,EAAMM,MAAMC,KAAI,SAAAJ,GAAM,OAClC,cAAC,EAAD,CAAMA,OAAQA,GAAaA,MAE7B,OAAO,8BAAMG,K,OCJf,SAASE,EAAaC,GACpB,IAAMC,EAAMD,EAAK,GACjB,MAAY,MAARC,EAAoB,GACpB,CAAC,IAAK,IAAK,IAAK,KAAKC,SAASD,GAAa,IACvCA,EAuBKE,MAVf,SAAeZ,GACb,IAAMa,EAVR,SAAuBP,GACrB,IAD4B,EACxBQ,EAAQ,EADgB,cAEXR,GAFW,IAE5B,2BACEQ,GAASN,EADa,SAFI,8BAK5B,OAAOM,EAKOC,CAAcf,EAAMM,OAClC,OACE,gCACE,yCAAYO,KACD,KAAVA,EAAe,wHAAsC,S,MCnB5D,SAASG,EAAOC,GAEd,OAAOA,EADSC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,SAKpD,SAASC,EAAQL,EAAQM,GAGvB,OAFkBP,EAAOC,GACND,EAAOO,GAe5B,SAASC,EAAcxB,GACrB,IAAMyB,EAXR,SAAkBR,EAAQM,GAExB,IAF8C,IAAfG,EAAc,uDAAH,EACpCC,EAAW,CAACL,EAAQL,EAAQM,IAC3BI,EAASN,OAASK,GAAU,CACjC,IAAIE,EAAaN,EAAQL,EAAQM,GAC5BI,EAAShB,SAASiB,IAAaD,EAASE,KAAKD,GAEpD,OAAOD,EAKaG,CAAS9B,EAAMiB,OAAQjB,EAAMuB,MAAO,GACxD,OACE,sBAAKtB,UAAU,gBAAf,UACE,cAAC,EAAD,CAAUK,MAAOmB,IACjB,cAAC,EAAD,CAAOnB,MAAOmB,OAKpBD,EAAcO,aAAe,CAC3Bd,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACrEM,MAAO,CAAC,IAAK,IAAK,IAAK,MAGVC,QChCAQ,MARf,WACE,OACE,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,OCKSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.3ee68365.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  return (\n    <img\n      className=\"Card\"\n      src={`https://deckofcardsapi.com/static/img/${props.cardId}.png`}\n      alt={`${props.cardId} playing card`}\n    />\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nfunction CardList(props) {\n  const cards = props.cards.map(cardId => (\n    <Card cardId={cardId} key={cardId} />\n  ));\n  return <div>{cards}</div>;\n}\n\nexport default CardList;\n","import React from \"react\";\n\n/* Calculate the score for a single card. */\nfunction getCardScore(card) {\n  const val = card[0];\n  if (val === \"A\") return 11;\n  if ([\"0\", \"J\", \"Q\", \"K\"].includes(val)) return 10;\n  return +val;\n}\n\n/* Calculate the score for a hand of cards. */\nfunction getTotalScore(cards) {\n  let total = 0;\n  for (let card of cards) {\n    total += getCardScore(card);\n  }\n  return total;\n}\n\n/* Component to display score */\nfunction Score(props) {\n  const score = getTotalScore(props.cards);\n  return (\n    <div>\n      <h2>Score: {score}</h2>\n      {score === 21 ? <h4>ðŸŽ‰ðŸŽ‰ðŸŽ‰ BLACKJACK!!! ðŸŽ‰ðŸŽ‰ðŸŽ‰</h4> : null}\n    </div>\n  );\n}\n\nexport default Score;\n","import React from \"react\";\nimport CardList from \"./CardList\";\nimport Score from \"./Score\";\nimport \"./BlackjackGame.css\";\n\n/* Get a random element from an array */\nfunction choice(values) {\n  const randIdx = Math.floor(Math.random() * values.length);\n  return values[randIdx];\n}\n\n/* Get a random value, suit combination from card data. */\nfunction getCard(values, suits) {\n  const randomVal = choice(values);\n  const randomSuit = choice(suits);\n  return randomVal + randomSuit;\n}\n\n/* Get numCards random cards, with no duplicates. */\nfunction getCards(values, suits, numCards = 1) {\n  const cardsArr = [getCard(values, suits)];\n  while (cardsArr.length < numCards) {\n    let randomCard = getCard(values, suits);\n    if (!cardsArr.includes(randomCard)) cardsArr.push(randomCard);\n  }\n  return cardsArr;\n}\n\n/* Main game component */\nfunction BlackjackGame(props) {\n  const pairOfCards = getCards(props.values, props.suits, 2);\n  return (\n    <div className=\"BlackjackGame\">\n      <CardList cards={pairOfCards} />\n      <Score cards={pairOfCards} />\n    </div>\n  );\n}\n\nBlackjackGame.defaultProps = {\n  values: [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\"],\n  suits: [\"C\", \"D\", \"H\", \"S\"]\n};\n\nexport default BlackjackGame;\n","import React from \"react\";\nimport \"./App.css\";\nimport BlackjackGame from \"./BlackjackGame\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BlackjackGame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}